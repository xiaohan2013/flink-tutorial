<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.xiaozhu</groupId>
	<artifactId>flink-tutorials</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<modules>
		<module>flink-k8s</module>
		<module>flink-dw</module>
        <module>flink-rules</module>
		<module>flink-olap</module>
        <module>flink-etl</module>
		<module>data-serving</module>
		<module>flink-userprofile</module>
        <module>flink-modeling</module>
        <module>flink-adhoc</module>
		<module>flink-analysis</module>
	</modules>

	<properties>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<scala.macros.version>2.1.1</scala.macros.version>
		<!-- Default scala versions, must be overwritten by build profiles, so we set something
		invalid here -->
		<scala.version>2.12.7</scala.version>
		<scala.binary.version>2.12</scala.binary.version>
		<slf4j.version>1.7.32</slf4j.version>
		<log4j.version>2.17.1</log4j.version>
		<protobuf.version>3.21.2</protobuf.version>
		<grpc.version>1.50.2</grpc.version>
		<flink.version>1.15.0</flink.version>
		<sprint.version>5.1.8.RELEASE</sprint.version>
		<os.detected.classifier>windows-x86_64</os.detected.classifier>
		<hadoop.version>3.1.3</hadoop.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-core -->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.flink</groupId>-->
	<!--			<artifactId>flink-core</artifactId>-->
	<!--			<version>1.15.0</version>-->
	<!--		</dependency>-->
			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-streaming-java -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-streaming-java</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-clients -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-clients</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-metrics-core</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-cep</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-metrics-prometheus</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-runtime -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-runtime</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-runtime-web</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-rpc-akka-loader</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-common</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-api-java</artifactId>
				<version>${flink.version}</version>
			</dependency>
	<!--		Combine Table API and DataStream API -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-api-java-bridge</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-table-planner_2.12</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-base</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-kafka</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-jdbc</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-cep_${scala.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.47</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-reflect</artifactId>
				<version>${scala.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.version}</version>
			</dependency>

			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.binary.version}</artifactId>
				<version>3.0.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<!-- API bridge between log4j 1 and 2 -->
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-1.2-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>5.8.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-runner</artifactId>
				<version>1.8.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-launcher</artifactId>
				<version>1.8.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-console-standalone</artifactId>
				<version>1.8.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.10</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.roaringbitmap</groupId>
				<artifactId>RoaringBitmap</artifactId>
				<version>0.9.21</version>
			</dependency>
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson</artifactId>
				<version>3.11.6</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.2.3</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.21</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.10</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore-nio</artifactId>
				<version>4.4.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>4.1.2</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.32</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.ververica/flink-connector-mysql-cdc -->
			<dependency>
				<groupId>com.ververica</groupId>
				<artifactId>flink-connector-mysql-cdc</artifactId>
				<version>2.2.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-clients</artifactId>
				<version>1.15.0</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-connector-kafka-0.10 -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-sql-connector-kafka</artifactId>
				<version>1.15.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-jdbc</artifactId>
				<version>1.15.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-sql-connector-hive-2.2.0_2.12</artifactId>
				<version>1.15.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-statebackend-rocksdb</artifactId>
				<version>1.15.0</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.12.0</version>
			</dependency>

			<!-- Hive Dependency -->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hive</groupId>-->
	<!--			<artifactId>hive-exec</artifactId>-->
	<!--			<version>2.2.0</version>-->
	<!--		</dependency>-->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hadoop</groupId>-->
	<!--			<artifactId>hadoop-mapreduce-client-core</artifactId>-->
	<!--			<version>2.7.2</version>-->
	<!--		</dependency>-->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hadoop</groupId>-->
	<!--			<artifactId>hadoop-common</artifactId>-->
	<!--			<version>2.7.2</version>-->
	<!--		</dependency>-->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hadoop</groupId>-->
	<!--			<artifactId>hadoop-mapreduce-client-common</artifactId>-->
	<!--			<version>2.7.2</version>-->
	<!--		</dependency>-->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hadoop</groupId>-->
	<!--			<artifactId>hadoop-mapreduce-client-jobclient</artifactId>-->
	<!--			<version>2.7.2</version>-->
	<!--		</dependency>-->
	<!--		<dependency>-->
	<!--			<groupId>org.apache.hadoop</groupId>-->
	<!--			<artifactId>hadoop-hdfs</artifactId>-->
	<!--			<version>2.7.2</version>-->
	<!--		</dependency>-->

			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-protobuf</artifactId>
				<version>${grpc.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>

			<dependency>
				<groupId>com.twitter</groupId>
				<artifactId>chill-protobuf</artifactId>
				<version>0.7.6</version>
				<!-- exclusions for dependency conversion -->
				<exclusions>
					<exclusion>
						<groupId>com.esotericsoftware.kryo</groupId>
						<artifactId>kryo</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${sprint.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.22</version>
				<scope>compile</scope>
			</dependency>
			<!--如果保存检查点到hdfs上，需要引入此依赖-->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<!--Flink默认使用的是slf4j记录日志，相当于一个日志的接口,这里使用log4j作为具体的日志实现-->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.25</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-to-slf4j</artifactId>
				<version>2.14.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.7.0</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>dependency-convergence</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Eclipse Integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<projectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<exclude>org.scala-lang:scala-library</exclude>
						<exclude>org.scala-lang:scala-compiler</exclude>
					</excludes>
					<sourceIncludes>
						<sourceInclude>**/*.scala</sourceInclude>
						<sourceInclude>**/*.java</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<archive>
						<!-- Globally exclude maven metadata, because it may accidentally bundle files we don't intend to -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
